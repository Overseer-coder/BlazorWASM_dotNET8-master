@page "/"
<PageTitle>Home</PageTitle>
<h1>Hello, world!</h1>

<p>
   Leia o fonte desta página ou da página API
</p>


@code{
    protected override Task OnInitializedAsync()
    {


        return base.OnInitializedAsync();
    }

        /*
       * No projeto BlazorWASM --> Controllers --> PeopleController
       * Criação dos endpoints. Este projeto tem integrado o EntityFramework -> Modalidade Coding First.
       *
       * No Projeto BlazorWASM.Client --> Pages --> CallAPI
       * Exemplo de chamada API do tipo GET
       *
       * Implementei OpenAPI para facilitar a visualização dos endpoints.
       * Rota: https://localhost:XXXXX/Swagger
       *
       * Primeiro exercício:
       * Implementar CRUD completo integrado com API's (GET/POST/PUT/DELETE),
       * Dica: Não esqueça de colocar o Annotation.
       *
       * Segundo exercício:
       * Com base no CRUD anterior, implementar validação de Formulário no frontend e backend. (Validação com Annotation Etc)
       *
       * Terceiro exercício
       * Com base no exercício anterior, converter o que antes estava em memória para persistência de dados utilizando EF - Coding First.
       * Dica 1: Vai precisar criar o DbSet no ApplicationDbContext
       * Dica 2: Pode definir o comportamento da PK através da Annotation [Key] ou através do OnModelCreating. A utilização das annotations é mais simples mas limitada.
       *
       * Quarto exercício
       * Implementação completa utilizando a library da DevExpress, tanto o componente do tipo Grid quanto o compotente do tipo Formulário.
       *
    *
    */
}